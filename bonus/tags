!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
DECIMAL	ft_printf.h	18;"	d
FALSE	ft_printf.h	17;"	d
FT_PRINTF_H	ft_printf.h	14;"	d
HEXALOW	ft_printf.h	20;"	d
HEXAUP	ft_printf.h	19;"	d
TRUE	ft_printf.h	16;"	d
ap	ft_printf.h	/^    va_list         ap;$/;"	m	struct:s_printf
arg_is_number	data_bonus.c	/^void    arg_is_number(t_printf *pf)$/;"	f
arg_len	ft_printf.h	/^    int             arg_len;$/;"	m	struct:s_printf
c_arg	ft_printf.h	/^    char            c_arg;$/;"	m	struct:s_printf
conversion	ft_printf.h	/^    char            conversion;$/;"	m	struct:s_printf
count	ft_printf.h	/^    int             count;$/;"	m	struct:s_printf
dot	ft_printf.h	/^    int             dot;$/;"	m	struct:s_printf
field	ft_printf.h	/^    int             field;$/;"	m	struct:s_printf
ft_atoi	libft_bonus.c	/^int ft_atoi(const char *str)$/;"	f
ft_isdigit	libft_bonus.c	/^int	ft_isdigit(int c)$/;"	f
ft_printf	printf.c	/^int ft_printf(const char *arg, ...)$/;"	f
ft_strlen	libft_bonus.c	/^size_t  ft_strlen(const char *str)$/;"	f
get_args_and_conv	data_bonus.c	/^void    get_args_and_conv(t_printf *pf, int i)$/;"	f
get_flags	data_bonus.c	/^void    get_flags(t_printf *pf, int i)$/;"	f
go_to_arg_end	data_bonus.c	/^int go_to_arg_end(t_printf *pf, int i)$/;"	f
go_to_next_arg	utils_bonus.c	/^int go_to_next_arg(t_printf *pf, int i)$/;"	f
go_to_next_flag	data_bonus.c	/^int go_to_next_flag(t_printf *pf, int i)$/;"	f
hashtag	ft_printf.h	/^    int             hashtag;$/;"	m	struct:s_printf
hexa_len	utils_bonus.c	/^int hexa_len(size_t nb, char *base)$/;"	f
i_arg	ft_printf.h	/^    int             i_arg;$/;"	m	struct:s_printf
initialize_variables	data_bonus.c	/^void    initialize_variables(t_printf *pf)$/;"	f
iput_char	printers_bonus.c	/^int iput_char(char c)$/;"	f
iput_hexa_base	printers_bonus.c	/^int iput_hexa_base(size_t nb, char *base)$/;"	f
iput_nbr	printers_bonus.c	/^int iput_nbr(int nb)$/;"	f
iput_str	printers_bonus.c	/^int iput_str(char *str)$/;"	f
is_conversion	utils_bonus.c	/^int is_conversion(char c)$/;"	f
is_flag	utils_bonus.c	/^int is_flag(char c)$/;"	f
main	main.c	/^int	main()$/;"	f
minus	ft_printf.h	/^    int             minus;$/;"	m	struct:s_printf
nb_len	utils_bonus.c	/^int nb_len(int nb)$/;"	f
p_arg	ft_printf.h	/^    void            *p_arg;$/;"	m	struct:s_printf
plus	ft_printf.h	/^    int             plus;$/;"	m	struct:s_printf
precision	ft_printf.h	/^    int             precision;$/;"	m	struct:s_printf
put_arg	flags_bonus.c	/^void    put_arg(t_printf *pf)$/;"	f
put_left_flags	flags_bonus.c	/^void    put_left_flags(t_printf *pf)$/;"	f
put_right_flag	flags_bonus.c	/^void    put_right_flag(t_printf *pf)$/;"	f
put_string_to_return	data_bonus.c	/^int put_string_to_return(t_printf *pf)$/;"	f
result	ft_printf.h	/^    char            *result;$/;"	m	struct:s_printf
s_arg	ft_printf.h	/^    char            *s_arg;$/;"	m	struct:s_printf
s_printf	ft_printf.h	/^typedef struct  s_printf$/;"	s
space	ft_printf.h	/^    int             space;$/;"	m	struct:s_printf
string	ft_printf.h	/^    char            *string;$/;"	m	struct:s_printf
t_printf	ft_printf.h	/^}               t_printf;$/;"	t	typeref:struct:s_printf
u_arg	ft_printf.h	/^    unsigned int    u_arg;$/;"	m	struct:s_printf
zero	ft_printf.h	/^    int             zero;$/;"	m	struct:s_printf
